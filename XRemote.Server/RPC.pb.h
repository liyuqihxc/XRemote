// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RPC.proto

#ifndef PROTOBUF_RPC_2eproto__INCLUDED
#define PROTOBUF_RPC_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_RPC_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCreateInstanceParamImpl();
void InitDefaultsCreateInstanceParam();
void InitDefaultsVariantParamImpl();
void InitDefaultsVariantParam();
void InitDefaultsRpcInvokeImpl();
void InitDefaultsRpcInvoke();
void InitDefaultsRpcReturn_ExceptionInfoImpl();
void InitDefaultsRpcReturn_ExceptionInfo();
void InitDefaultsRpcReturnImpl();
void InitDefaultsRpcReturn();
inline void InitDefaults() {
  InitDefaultsCreateInstanceParam();
  InitDefaultsVariantParam();
  InitDefaultsRpcInvoke();
  InitDefaultsRpcReturn_ExceptionInfo();
  InitDefaultsRpcReturn();
}
}  // namespace protobuf_RPC_2eproto
namespace RPC {
class CreateInstanceParam;
class CreateInstanceParamDefaultTypeInternal;
extern CreateInstanceParamDefaultTypeInternal _CreateInstanceParam_default_instance_;
class RpcInvoke;
class RpcInvokeDefaultTypeInternal;
extern RpcInvokeDefaultTypeInternal _RpcInvoke_default_instance_;
class RpcReturn;
class RpcReturnDefaultTypeInternal;
extern RpcReturnDefaultTypeInternal _RpcReturn_default_instance_;
class RpcReturn_ExceptionInfo;
class RpcReturn_ExceptionInfoDefaultTypeInternal;
extern RpcReturn_ExceptionInfoDefaultTypeInternal _RpcReturn_ExceptionInfo_default_instance_;
class VariantParam;
class VariantParamDefaultTypeInternal;
extern VariantParamDefaultTypeInternal _VariantParam_default_instance_;
}  // namespace RPC
namespace RPC {

// ===================================================================

class CreateInstanceParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RPC.CreateInstanceParam) */ {
 public:
  CreateInstanceParam();
  virtual ~CreateInstanceParam();

  CreateInstanceParam(const CreateInstanceParam& from);

  inline CreateInstanceParam& operator=(const CreateInstanceParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateInstanceParam(CreateInstanceParam&& from) noexcept
    : CreateInstanceParam() {
    *this = ::std::move(from);
  }

  inline CreateInstanceParam& operator=(CreateInstanceParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateInstanceParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateInstanceParam* internal_default_instance() {
    return reinterpret_cast<const CreateInstanceParam*>(
               &_CreateInstanceParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CreateInstanceParam* other);
  friend void swap(CreateInstanceParam& a, CreateInstanceParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateInstanceParam* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateInstanceParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateInstanceParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Guid = 3;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // fixed32 Version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // fixed32 ActivityID = 2;
  void clear_activityid();
  static const int kActivityIDFieldNumber = 2;
  ::google::protobuf::uint32 activityid() const;
  void set_activityid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RPC.CreateInstanceParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 activityid_;
  mutable int _cached_size_;
  friend struct ::protobuf_RPC_2eproto::TableStruct;
  friend void ::protobuf_RPC_2eproto::InitDefaultsCreateInstanceParamImpl();
};
// -------------------------------------------------------------------

class VariantParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RPC.VariantParam) */ {
 public:
  VariantParam();
  virtual ~VariantParam();

  VariantParam(const VariantParam& from);

  inline VariantParam& operator=(const VariantParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VariantParam(VariantParam&& from) noexcept
    : VariantParam() {
    *this = ::std::move(from);
  }

  inline VariantParam& operator=(VariantParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VariantParam& default_instance();

  enum ValueCase {
    kFixed32 = 1,
    kSFixed32 = 2,
    kFixed64 = 3,
    kSFixed64 = 4,
    kBool = 5,
    kFloat = 6,
    kDouble = 7,
    kString = 8,
    kDecimal = 9,
    kBytes = 10,
    kGuid = 11,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VariantParam* internal_default_instance() {
    return reinterpret_cast<const VariantParam*>(
               &_VariantParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(VariantParam* other);
  friend void swap(VariantParam& a, VariantParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VariantParam* New() const PROTOBUF_FINAL { return New(NULL); }

  VariantParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VariantParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 Fixed32 = 1;
  private:
  bool has_fixed32() const;
  public:
  void clear_fixed32();
  static const int kFixed32FieldNumber = 1;
  ::google::protobuf::uint32 fixed32() const;
  void set_fixed32(::google::protobuf::uint32 value);

  // sfixed32 SFixed32 = 2;
  private:
  bool has_sfixed32() const;
  public:
  void clear_sfixed32();
  static const int kSFixed32FieldNumber = 2;
  ::google::protobuf::int32 sfixed32() const;
  void set_sfixed32(::google::protobuf::int32 value);

  // fixed64 Fixed64 = 3;
  private:
  bool has_fixed64() const;
  public:
  void clear_fixed64();
  static const int kFixed64FieldNumber = 3;
  ::google::protobuf::uint64 fixed64() const;
  void set_fixed64(::google::protobuf::uint64 value);

  // sfixed64 SFixed64 = 4;
  private:
  bool has_sfixed64() const;
  public:
  void clear_sfixed64();
  static const int kSFixed64FieldNumber = 4;
  ::google::protobuf::int64 sfixed64() const;
  void set_sfixed64(::google::protobuf::int64 value);

  // bool Bool = 5;
  private:
  bool has_bool_() const;
  public:
  void clear_bool_();
  static const int kBoolFieldNumber = 5;
  bool bool_() const;
  void set_bool_(bool value);

  // float Float = 6;
  private:
  bool has_float_() const;
  public:
  void clear_float_();
  static const int kFloatFieldNumber = 6;
  float float_() const;
  void set_float_(float value);

  // double Double = 7;
  private:
  bool has_double_() const;
  public:
  void clear_double_();
  static const int kDoubleFieldNumber = 7;
  double double_() const;
  void set_double_(double value);

  // string String = 8;
  private:
  bool has_string() const;
  public:
  void clear_string();
  static const int kStringFieldNumber = 8;
  const ::std::string& string() const;
  void set_string(const ::std::string& value);
  #if LANG_CXX11
  void set_string(::std::string&& value);
  #endif
  void set_string(const char* value);
  void set_string(const char* value, size_t size);
  ::std::string* mutable_string();
  ::std::string* release_string();
  void set_allocated_string(::std::string* string);

  // string Decimal = 9;
  private:
  bool has_decimal() const;
  public:
  void clear_decimal();
  static const int kDecimalFieldNumber = 9;
  const ::std::string& decimal() const;
  void set_decimal(const ::std::string& value);
  #if LANG_CXX11
  void set_decimal(::std::string&& value);
  #endif
  void set_decimal(const char* value);
  void set_decimal(const char* value, size_t size);
  ::std::string* mutable_decimal();
  ::std::string* release_decimal();
  void set_allocated_decimal(::std::string* decimal);

  // bytes Bytes = 10;
  private:
  bool has_bytes() const;
  public:
  void clear_bytes();
  static const int kBytesFieldNumber = 10;
  const ::std::string& bytes() const;
  void set_bytes(const ::std::string& value);
  #if LANG_CXX11
  void set_bytes(::std::string&& value);
  #endif
  void set_bytes(const char* value);
  void set_bytes(const void* value, size_t size);
  ::std::string* mutable_bytes();
  ::std::string* release_bytes();
  void set_allocated_bytes(::std::string* bytes);

  // bytes Guid = 11;
  private:
  bool has_guid() const;
  public:
  void clear_guid();
  static const int kGuidFieldNumber = 11;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const void* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  ValueCase Value_case() const;
  // @@protoc_insertion_point(class_scope:RPC.VariantParam)
 private:
  void set_has_fixed32();
  void set_has_sfixed32();
  void set_has_fixed64();
  void set_has_sfixed64();
  void set_has_bool_();
  void set_has_float_();
  void set_has_double_();
  void set_has_string();
  void set_has_decimal();
  void set_has_bytes();
  void set_has_guid();

  inline bool has_Value() const;
  void clear_Value();
  inline void clear_has_Value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ValueUnion {
    ValueUnion() {}
    ::google::protobuf::uint32 fixed32_;
    ::google::protobuf::int32 sfixed32_;
    ::google::protobuf::uint64 fixed64_;
    ::google::protobuf::int64 sfixed64_;
    bool bool__;
    float float__;
    double double__;
    ::google::protobuf::internal::ArenaStringPtr string_;
    ::google::protobuf::internal::ArenaStringPtr decimal_;
    ::google::protobuf::internal::ArenaStringPtr bytes_;
    ::google::protobuf::internal::ArenaStringPtr guid_;
  } Value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_RPC_2eproto::TableStruct;
  friend void ::protobuf_RPC_2eproto::InitDefaultsVariantParamImpl();
};
// -------------------------------------------------------------------

class RpcInvoke : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RPC.RpcInvoke) */ {
 public:
  RpcInvoke();
  virtual ~RpcInvoke();

  RpcInvoke(const RpcInvoke& from);

  inline RpcInvoke& operator=(const RpcInvoke& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RpcInvoke(RpcInvoke&& from) noexcept
    : RpcInvoke() {
    *this = ::std::move(from);
  }

  inline RpcInvoke& operator=(RpcInvoke&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcInvoke& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RpcInvoke* internal_default_instance() {
    return reinterpret_cast<const RpcInvoke*>(
               &_RpcInvoke_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RpcInvoke* other);
  friend void swap(RpcInvoke& a, RpcInvoke& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RpcInvoke* New() const PROTOBUF_FINAL { return New(NULL); }

  RpcInvoke* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RpcInvoke* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RPC.VariantParam Params = 6;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 6;
  const ::RPC::VariantParam& params(int index) const;
  ::RPC::VariantParam* mutable_params(int index);
  ::RPC::VariantParam* add_params();
  ::google::protobuf::RepeatedPtrField< ::RPC::VariantParam >*
      mutable_params();
  const ::google::protobuf::RepeatedPtrField< ::RPC::VariantParam >&
      params() const;

  // sfixed32 ObjectID = 1;
  void clear_objectid();
  static const int kObjectIDFieldNumber = 1;
  ::google::protobuf::int32 objectid() const;
  void set_objectid(::google::protobuf::int32 value);

  // fixed32 InterfaceID = 2;
  void clear_interfaceid();
  static const int kInterfaceIDFieldNumber = 2;
  ::google::protobuf::uint32 interfaceid() const;
  void set_interfaceid(::google::protobuf::uint32 value);

  // sfixed32 CallID = 3;
  void clear_callid();
  static const int kCallIDFieldNumber = 3;
  ::google::protobuf::int32 callid() const;
  void set_callid(::google::protobuf::int32 value);

  // int32 DispID = 4;
  void clear_dispid();
  static const int kDispIDFieldNumber = 4;
  ::google::protobuf::int32 dispid() const;
  void set_dispid(::google::protobuf::int32 value);

  // int32 wFlags = 5;
  void clear_wflags();
  static const int kWFlagsFieldNumber = 5;
  ::google::protobuf::int32 wflags() const;
  void set_wflags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RPC.RpcInvoke)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::RPC::VariantParam > params_;
  ::google::protobuf::int32 objectid_;
  ::google::protobuf::uint32 interfaceid_;
  ::google::protobuf::int32 callid_;
  ::google::protobuf::int32 dispid_;
  ::google::protobuf::int32 wflags_;
  mutable int _cached_size_;
  friend struct ::protobuf_RPC_2eproto::TableStruct;
  friend void ::protobuf_RPC_2eproto::InitDefaultsRpcInvokeImpl();
};
// -------------------------------------------------------------------

class RpcReturn_ExceptionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RPC.RpcReturn.ExceptionInfo) */ {
 public:
  RpcReturn_ExceptionInfo();
  virtual ~RpcReturn_ExceptionInfo();

  RpcReturn_ExceptionInfo(const RpcReturn_ExceptionInfo& from);

  inline RpcReturn_ExceptionInfo& operator=(const RpcReturn_ExceptionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RpcReturn_ExceptionInfo(RpcReturn_ExceptionInfo&& from) noexcept
    : RpcReturn_ExceptionInfo() {
    *this = ::std::move(from);
  }

  inline RpcReturn_ExceptionInfo& operator=(RpcReturn_ExceptionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcReturn_ExceptionInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RpcReturn_ExceptionInfo* internal_default_instance() {
    return reinterpret_cast<const RpcReturn_ExceptionInfo*>(
               &_RpcReturn_ExceptionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(RpcReturn_ExceptionInfo* other);
  friend void swap(RpcReturn_ExceptionInfo& a, RpcReturn_ExceptionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RpcReturn_ExceptionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RpcReturn_ExceptionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RpcReturn_ExceptionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Description = 1;
  void clear_description();
  static const int kDescriptionFieldNumber = 1;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // int32 scode = 2;
  void clear_scode();
  static const int kScodeFieldNumber = 2;
  ::google::protobuf::int32 scode() const;
  void set_scode(::google::protobuf::int32 value);

  // int32 wCode = 3;
  void clear_wcode();
  static const int kWCodeFieldNumber = 3;
  ::google::protobuf::int32 wcode() const;
  void set_wcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RPC.RpcReturn.ExceptionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::int32 scode_;
  ::google::protobuf::int32 wcode_;
  mutable int _cached_size_;
  friend struct ::protobuf_RPC_2eproto::TableStruct;
  friend void ::protobuf_RPC_2eproto::InitDefaultsRpcReturn_ExceptionInfoImpl();
};
// -------------------------------------------------------------------

class RpcReturn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RPC.RpcReturn) */ {
 public:
  RpcReturn();
  virtual ~RpcReturn();

  RpcReturn(const RpcReturn& from);

  inline RpcReturn& operator=(const RpcReturn& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RpcReturn(RpcReturn&& from) noexcept
    : RpcReturn() {
    *this = ::std::move(from);
  }

  inline RpcReturn& operator=(RpcReturn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcReturn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RpcReturn* internal_default_instance() {
    return reinterpret_cast<const RpcReturn*>(
               &_RpcReturn_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(RpcReturn* other);
  friend void swap(RpcReturn& a, RpcReturn& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RpcReturn* New() const PROTOBUF_FINAL { return New(NULL); }

  RpcReturn* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RpcReturn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RpcReturn_ExceptionInfo ExceptionInfo;

  // accessors -------------------------------------------------------

  // .RPC.VariantParam ReturnVal = 3;
  bool has_returnval() const;
  void clear_returnval();
  static const int kReturnValFieldNumber = 3;
  const ::RPC::VariantParam& returnval() const;
  ::RPC::VariantParam* release_returnval();
  ::RPC::VariantParam* mutable_returnval();
  void set_allocated_returnval(::RPC::VariantParam* returnval);

  // .RPC.RpcReturn.ExceptionInfo Exception = 4;
  bool has_exception() const;
  void clear_exception();
  static const int kExceptionFieldNumber = 4;
  const ::RPC::RpcReturn_ExceptionInfo& exception() const;
  ::RPC::RpcReturn_ExceptionInfo* release_exception();
  ::RPC::RpcReturn_ExceptionInfo* mutable_exception();
  void set_allocated_exception(::RPC::RpcReturn_ExceptionInfo* exception);

  // sfixed32 CallID = 1;
  void clear_callid();
  static const int kCallIDFieldNumber = 1;
  ::google::protobuf::int32 callid() const;
  void set_callid(::google::protobuf::int32 value);

  // sfixed32 HResult = 2;
  void clear_hresult();
  static const int kHResultFieldNumber = 2;
  ::google::protobuf::int32 hresult() const;
  void set_hresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RPC.RpcReturn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::RPC::VariantParam* returnval_;
  ::RPC::RpcReturn_ExceptionInfo* exception_;
  ::google::protobuf::int32 callid_;
  ::google::protobuf::int32 hresult_;
  mutable int _cached_size_;
  friend struct ::protobuf_RPC_2eproto::TableStruct;
  friend void ::protobuf_RPC_2eproto::InitDefaultsRpcReturnImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreateInstanceParam

// fixed32 Version = 1;
inline void CreateInstanceParam::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 CreateInstanceParam::version() const {
  // @@protoc_insertion_point(field_get:RPC.CreateInstanceParam.Version)
  return version_;
}
inline void CreateInstanceParam::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:RPC.CreateInstanceParam.Version)
}

// fixed32 ActivityID = 2;
inline void CreateInstanceParam::clear_activityid() {
  activityid_ = 0u;
}
inline ::google::protobuf::uint32 CreateInstanceParam::activityid() const {
  // @@protoc_insertion_point(field_get:RPC.CreateInstanceParam.ActivityID)
  return activityid_;
}
inline void CreateInstanceParam::set_activityid(::google::protobuf::uint32 value) {
  
  activityid_ = value;
  // @@protoc_insertion_point(field_set:RPC.CreateInstanceParam.ActivityID)
}

// string Guid = 3;
inline void CreateInstanceParam::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateInstanceParam::guid() const {
  // @@protoc_insertion_point(field_get:RPC.CreateInstanceParam.Guid)
  return guid_.GetNoArena();
}
inline void CreateInstanceParam::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RPC.CreateInstanceParam.Guid)
}
#if LANG_CXX11
inline void CreateInstanceParam::set_guid(::std::string&& value) {
  
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RPC.CreateInstanceParam.Guid)
}
#endif
inline void CreateInstanceParam::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RPC.CreateInstanceParam.Guid)
}
inline void CreateInstanceParam::set_guid(const char* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RPC.CreateInstanceParam.Guid)
}
inline ::std::string* CreateInstanceParam::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:RPC.CreateInstanceParam.Guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateInstanceParam::release_guid() {
  // @@protoc_insertion_point(field_release:RPC.CreateInstanceParam.Guid)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateInstanceParam::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:RPC.CreateInstanceParam.Guid)
}

// -------------------------------------------------------------------

// VariantParam

// fixed32 Fixed32 = 1;
inline bool VariantParam::has_fixed32() const {
  return Value_case() == kFixed32;
}
inline void VariantParam::set_has_fixed32() {
  _oneof_case_[0] = kFixed32;
}
inline void VariantParam::clear_fixed32() {
  if (has_fixed32()) {
    Value_.fixed32_ = 0u;
    clear_has_Value();
  }
}
inline ::google::protobuf::uint32 VariantParam::fixed32() const {
  // @@protoc_insertion_point(field_get:RPC.VariantParam.Fixed32)
  if (has_fixed32()) {
    return Value_.fixed32_;
  }
  return 0u;
}
inline void VariantParam::set_fixed32(::google::protobuf::uint32 value) {
  if (!has_fixed32()) {
    clear_Value();
    set_has_fixed32();
  }
  Value_.fixed32_ = value;
  // @@protoc_insertion_point(field_set:RPC.VariantParam.Fixed32)
}

// sfixed32 SFixed32 = 2;
inline bool VariantParam::has_sfixed32() const {
  return Value_case() == kSFixed32;
}
inline void VariantParam::set_has_sfixed32() {
  _oneof_case_[0] = kSFixed32;
}
inline void VariantParam::clear_sfixed32() {
  if (has_sfixed32()) {
    Value_.sfixed32_ = 0;
    clear_has_Value();
  }
}
inline ::google::protobuf::int32 VariantParam::sfixed32() const {
  // @@protoc_insertion_point(field_get:RPC.VariantParam.SFixed32)
  if (has_sfixed32()) {
    return Value_.sfixed32_;
  }
  return 0;
}
inline void VariantParam::set_sfixed32(::google::protobuf::int32 value) {
  if (!has_sfixed32()) {
    clear_Value();
    set_has_sfixed32();
  }
  Value_.sfixed32_ = value;
  // @@protoc_insertion_point(field_set:RPC.VariantParam.SFixed32)
}

// fixed64 Fixed64 = 3;
inline bool VariantParam::has_fixed64() const {
  return Value_case() == kFixed64;
}
inline void VariantParam::set_has_fixed64() {
  _oneof_case_[0] = kFixed64;
}
inline void VariantParam::clear_fixed64() {
  if (has_fixed64()) {
    Value_.fixed64_ = GOOGLE_ULONGLONG(0);
    clear_has_Value();
  }
}
inline ::google::protobuf::uint64 VariantParam::fixed64() const {
  // @@protoc_insertion_point(field_get:RPC.VariantParam.Fixed64)
  if (has_fixed64()) {
    return Value_.fixed64_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void VariantParam::set_fixed64(::google::protobuf::uint64 value) {
  if (!has_fixed64()) {
    clear_Value();
    set_has_fixed64();
  }
  Value_.fixed64_ = value;
  // @@protoc_insertion_point(field_set:RPC.VariantParam.Fixed64)
}

// sfixed64 SFixed64 = 4;
inline bool VariantParam::has_sfixed64() const {
  return Value_case() == kSFixed64;
}
inline void VariantParam::set_has_sfixed64() {
  _oneof_case_[0] = kSFixed64;
}
inline void VariantParam::clear_sfixed64() {
  if (has_sfixed64()) {
    Value_.sfixed64_ = GOOGLE_LONGLONG(0);
    clear_has_Value();
  }
}
inline ::google::protobuf::int64 VariantParam::sfixed64() const {
  // @@protoc_insertion_point(field_get:RPC.VariantParam.SFixed64)
  if (has_sfixed64()) {
    return Value_.sfixed64_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void VariantParam::set_sfixed64(::google::protobuf::int64 value) {
  if (!has_sfixed64()) {
    clear_Value();
    set_has_sfixed64();
  }
  Value_.sfixed64_ = value;
  // @@protoc_insertion_point(field_set:RPC.VariantParam.SFixed64)
}

// bool Bool = 5;
inline bool VariantParam::has_bool_() const {
  return Value_case() == kBool;
}
inline void VariantParam::set_has_bool_() {
  _oneof_case_[0] = kBool;
}
inline void VariantParam::clear_bool_() {
  if (has_bool_()) {
    Value_.bool__ = false;
    clear_has_Value();
  }
}
inline bool VariantParam::bool_() const {
  // @@protoc_insertion_point(field_get:RPC.VariantParam.Bool)
  if (has_bool_()) {
    return Value_.bool__;
  }
  return false;
}
inline void VariantParam::set_bool_(bool value) {
  if (!has_bool_()) {
    clear_Value();
    set_has_bool_();
  }
  Value_.bool__ = value;
  // @@protoc_insertion_point(field_set:RPC.VariantParam.Bool)
}

// float Float = 6;
inline bool VariantParam::has_float_() const {
  return Value_case() == kFloat;
}
inline void VariantParam::set_has_float_() {
  _oneof_case_[0] = kFloat;
}
inline void VariantParam::clear_float_() {
  if (has_float_()) {
    Value_.float__ = 0;
    clear_has_Value();
  }
}
inline float VariantParam::float_() const {
  // @@protoc_insertion_point(field_get:RPC.VariantParam.Float)
  if (has_float_()) {
    return Value_.float__;
  }
  return 0;
}
inline void VariantParam::set_float_(float value) {
  if (!has_float_()) {
    clear_Value();
    set_has_float_();
  }
  Value_.float__ = value;
  // @@protoc_insertion_point(field_set:RPC.VariantParam.Float)
}

// double Double = 7;
inline bool VariantParam::has_double_() const {
  return Value_case() == kDouble;
}
inline void VariantParam::set_has_double_() {
  _oneof_case_[0] = kDouble;
}
inline void VariantParam::clear_double_() {
  if (has_double_()) {
    Value_.double__ = 0;
    clear_has_Value();
  }
}
inline double VariantParam::double_() const {
  // @@protoc_insertion_point(field_get:RPC.VariantParam.Double)
  if (has_double_()) {
    return Value_.double__;
  }
  return 0;
}
inline void VariantParam::set_double_(double value) {
  if (!has_double_()) {
    clear_Value();
    set_has_double_();
  }
  Value_.double__ = value;
  // @@protoc_insertion_point(field_set:RPC.VariantParam.Double)
}

// string String = 8;
inline bool VariantParam::has_string() const {
  return Value_case() == kString;
}
inline void VariantParam::set_has_string() {
  _oneof_case_[0] = kString;
}
inline void VariantParam::clear_string() {
  if (has_string()) {
    Value_.string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_Value();
  }
}
inline const ::std::string& VariantParam::string() const {
  // @@protoc_insertion_point(field_get:RPC.VariantParam.String)
  if (has_string()) {
    return Value_.string_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void VariantParam::set_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:RPC.VariantParam.String)
  if (!has_string()) {
    clear_Value();
    set_has_string();
    Value_.string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  Value_.string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RPC.VariantParam.String)
}
#if LANG_CXX11
inline void VariantParam::set_string(::std::string&& value) {
  // @@protoc_insertion_point(field_set:RPC.VariantParam.String)
  if (!has_string()) {
    clear_Value();
    set_has_string();
    Value_.string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  Value_.string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RPC.VariantParam.String)
}
#endif
inline void VariantParam::set_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_string()) {
    clear_Value();
    set_has_string();
    Value_.string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  Value_.string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RPC.VariantParam.String)
}
inline void VariantParam::set_string(const char* value, size_t size) {
  if (!has_string()) {
    clear_Value();
    set_has_string();
    Value_.string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  Value_.string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RPC.VariantParam.String)
}
inline ::std::string* VariantParam::mutable_string() {
  if (!has_string()) {
    clear_Value();
    set_has_string();
    Value_.string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:RPC.VariantParam.String)
  return Value_.string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VariantParam::release_string() {
  // @@protoc_insertion_point(field_release:RPC.VariantParam.String)
  if (has_string()) {
    clear_has_Value();
    return Value_.string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void VariantParam::set_allocated_string(::std::string* string) {
  if (!has_string()) {
    Value_.string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_Value();
  if (string != NULL) {
    set_has_string();
    Value_.string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        string);
  }
  // @@protoc_insertion_point(field_set_allocated:RPC.VariantParam.String)
}

// string Decimal = 9;
inline bool VariantParam::has_decimal() const {
  return Value_case() == kDecimal;
}
inline void VariantParam::set_has_decimal() {
  _oneof_case_[0] = kDecimal;
}
inline void VariantParam::clear_decimal() {
  if (has_decimal()) {
    Value_.decimal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_Value();
  }
}
inline const ::std::string& VariantParam::decimal() const {
  // @@protoc_insertion_point(field_get:RPC.VariantParam.Decimal)
  if (has_decimal()) {
    return Value_.decimal_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void VariantParam::set_decimal(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:RPC.VariantParam.Decimal)
  if (!has_decimal()) {
    clear_Value();
    set_has_decimal();
    Value_.decimal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  Value_.decimal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RPC.VariantParam.Decimal)
}
#if LANG_CXX11
inline void VariantParam::set_decimal(::std::string&& value) {
  // @@protoc_insertion_point(field_set:RPC.VariantParam.Decimal)
  if (!has_decimal()) {
    clear_Value();
    set_has_decimal();
    Value_.decimal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  Value_.decimal_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RPC.VariantParam.Decimal)
}
#endif
inline void VariantParam::set_decimal(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_decimal()) {
    clear_Value();
    set_has_decimal();
    Value_.decimal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  Value_.decimal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RPC.VariantParam.Decimal)
}
inline void VariantParam::set_decimal(const char* value, size_t size) {
  if (!has_decimal()) {
    clear_Value();
    set_has_decimal();
    Value_.decimal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  Value_.decimal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RPC.VariantParam.Decimal)
}
inline ::std::string* VariantParam::mutable_decimal() {
  if (!has_decimal()) {
    clear_Value();
    set_has_decimal();
    Value_.decimal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:RPC.VariantParam.Decimal)
  return Value_.decimal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VariantParam::release_decimal() {
  // @@protoc_insertion_point(field_release:RPC.VariantParam.Decimal)
  if (has_decimal()) {
    clear_has_Value();
    return Value_.decimal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void VariantParam::set_allocated_decimal(::std::string* decimal) {
  if (!has_decimal()) {
    Value_.decimal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_Value();
  if (decimal != NULL) {
    set_has_decimal();
    Value_.decimal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        decimal);
  }
  // @@protoc_insertion_point(field_set_allocated:RPC.VariantParam.Decimal)
}

// bytes Bytes = 10;
inline bool VariantParam::has_bytes() const {
  return Value_case() == kBytes;
}
inline void VariantParam::set_has_bytes() {
  _oneof_case_[0] = kBytes;
}
inline void VariantParam::clear_bytes() {
  if (has_bytes()) {
    Value_.bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_Value();
  }
}
inline const ::std::string& VariantParam::bytes() const {
  // @@protoc_insertion_point(field_get:RPC.VariantParam.Bytes)
  if (has_bytes()) {
    return Value_.bytes_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void VariantParam::set_bytes(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:RPC.VariantParam.Bytes)
  if (!has_bytes()) {
    clear_Value();
    set_has_bytes();
    Value_.bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  Value_.bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RPC.VariantParam.Bytes)
}
#if LANG_CXX11
inline void VariantParam::set_bytes(::std::string&& value) {
  // @@protoc_insertion_point(field_set:RPC.VariantParam.Bytes)
  if (!has_bytes()) {
    clear_Value();
    set_has_bytes();
    Value_.bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  Value_.bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RPC.VariantParam.Bytes)
}
#endif
inline void VariantParam::set_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_bytes()) {
    clear_Value();
    set_has_bytes();
    Value_.bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  Value_.bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RPC.VariantParam.Bytes)
}
inline void VariantParam::set_bytes(const void* value, size_t size) {
  if (!has_bytes()) {
    clear_Value();
    set_has_bytes();
    Value_.bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  Value_.bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RPC.VariantParam.Bytes)
}
inline ::std::string* VariantParam::mutable_bytes() {
  if (!has_bytes()) {
    clear_Value();
    set_has_bytes();
    Value_.bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:RPC.VariantParam.Bytes)
  return Value_.bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VariantParam::release_bytes() {
  // @@protoc_insertion_point(field_release:RPC.VariantParam.Bytes)
  if (has_bytes()) {
    clear_has_Value();
    return Value_.bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void VariantParam::set_allocated_bytes(::std::string* bytes) {
  if (!has_bytes()) {
    Value_.bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_Value();
  if (bytes != NULL) {
    set_has_bytes();
    Value_.bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        bytes);
  }
  // @@protoc_insertion_point(field_set_allocated:RPC.VariantParam.Bytes)
}

// bytes Guid = 11;
inline bool VariantParam::has_guid() const {
  return Value_case() == kGuid;
}
inline void VariantParam::set_has_guid() {
  _oneof_case_[0] = kGuid;
}
inline void VariantParam::clear_guid() {
  if (has_guid()) {
    Value_.guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_Value();
  }
}
inline const ::std::string& VariantParam::guid() const {
  // @@protoc_insertion_point(field_get:RPC.VariantParam.Guid)
  if (has_guid()) {
    return Value_.guid_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void VariantParam::set_guid(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:RPC.VariantParam.Guid)
  if (!has_guid()) {
    clear_Value();
    set_has_guid();
    Value_.guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  Value_.guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RPC.VariantParam.Guid)
}
#if LANG_CXX11
inline void VariantParam::set_guid(::std::string&& value) {
  // @@protoc_insertion_point(field_set:RPC.VariantParam.Guid)
  if (!has_guid()) {
    clear_Value();
    set_has_guid();
    Value_.guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  Value_.guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RPC.VariantParam.Guid)
}
#endif
inline void VariantParam::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_guid()) {
    clear_Value();
    set_has_guid();
    Value_.guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  Value_.guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RPC.VariantParam.Guid)
}
inline void VariantParam::set_guid(const void* value, size_t size) {
  if (!has_guid()) {
    clear_Value();
    set_has_guid();
    Value_.guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  Value_.guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RPC.VariantParam.Guid)
}
inline ::std::string* VariantParam::mutable_guid() {
  if (!has_guid()) {
    clear_Value();
    set_has_guid();
    Value_.guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:RPC.VariantParam.Guid)
  return Value_.guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VariantParam::release_guid() {
  // @@protoc_insertion_point(field_release:RPC.VariantParam.Guid)
  if (has_guid()) {
    clear_has_Value();
    return Value_.guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void VariantParam::set_allocated_guid(::std::string* guid) {
  if (!has_guid()) {
    Value_.guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_Value();
  if (guid != NULL) {
    set_has_guid();
    Value_.guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        guid);
  }
  // @@protoc_insertion_point(field_set_allocated:RPC.VariantParam.Guid)
}

inline bool VariantParam::has_Value() const {
  return Value_case() != VALUE_NOT_SET;
}
inline void VariantParam::clear_has_Value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline VariantParam::ValueCase VariantParam::Value_case() const {
  return VariantParam::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// RpcInvoke

// sfixed32 ObjectID = 1;
inline void RpcInvoke::clear_objectid() {
  objectid_ = 0;
}
inline ::google::protobuf::int32 RpcInvoke::objectid() const {
  // @@protoc_insertion_point(field_get:RPC.RpcInvoke.ObjectID)
  return objectid_;
}
inline void RpcInvoke::set_objectid(::google::protobuf::int32 value) {
  
  objectid_ = value;
  // @@protoc_insertion_point(field_set:RPC.RpcInvoke.ObjectID)
}

// fixed32 InterfaceID = 2;
inline void RpcInvoke::clear_interfaceid() {
  interfaceid_ = 0u;
}
inline ::google::protobuf::uint32 RpcInvoke::interfaceid() const {
  // @@protoc_insertion_point(field_get:RPC.RpcInvoke.InterfaceID)
  return interfaceid_;
}
inline void RpcInvoke::set_interfaceid(::google::protobuf::uint32 value) {
  
  interfaceid_ = value;
  // @@protoc_insertion_point(field_set:RPC.RpcInvoke.InterfaceID)
}

// sfixed32 CallID = 3;
inline void RpcInvoke::clear_callid() {
  callid_ = 0;
}
inline ::google::protobuf::int32 RpcInvoke::callid() const {
  // @@protoc_insertion_point(field_get:RPC.RpcInvoke.CallID)
  return callid_;
}
inline void RpcInvoke::set_callid(::google::protobuf::int32 value) {
  
  callid_ = value;
  // @@protoc_insertion_point(field_set:RPC.RpcInvoke.CallID)
}

// int32 DispID = 4;
inline void RpcInvoke::clear_dispid() {
  dispid_ = 0;
}
inline ::google::protobuf::int32 RpcInvoke::dispid() const {
  // @@protoc_insertion_point(field_get:RPC.RpcInvoke.DispID)
  return dispid_;
}
inline void RpcInvoke::set_dispid(::google::protobuf::int32 value) {
  
  dispid_ = value;
  // @@protoc_insertion_point(field_set:RPC.RpcInvoke.DispID)
}

// int32 wFlags = 5;
inline void RpcInvoke::clear_wflags() {
  wflags_ = 0;
}
inline ::google::protobuf::int32 RpcInvoke::wflags() const {
  // @@protoc_insertion_point(field_get:RPC.RpcInvoke.wFlags)
  return wflags_;
}
inline void RpcInvoke::set_wflags(::google::protobuf::int32 value) {
  
  wflags_ = value;
  // @@protoc_insertion_point(field_set:RPC.RpcInvoke.wFlags)
}

// repeated .RPC.VariantParam Params = 6;
inline int RpcInvoke::params_size() const {
  return params_.size();
}
inline void RpcInvoke::clear_params() {
  params_.Clear();
}
inline const ::RPC::VariantParam& RpcInvoke::params(int index) const {
  // @@protoc_insertion_point(field_get:RPC.RpcInvoke.Params)
  return params_.Get(index);
}
inline ::RPC::VariantParam* RpcInvoke::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:RPC.RpcInvoke.Params)
  return params_.Mutable(index);
}
inline ::RPC::VariantParam* RpcInvoke::add_params() {
  // @@protoc_insertion_point(field_add:RPC.RpcInvoke.Params)
  return params_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RPC::VariantParam >*
RpcInvoke::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:RPC.RpcInvoke.Params)
  return &params_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RPC::VariantParam >&
RpcInvoke::params() const {
  // @@protoc_insertion_point(field_list:RPC.RpcInvoke.Params)
  return params_;
}

// -------------------------------------------------------------------

// RpcReturn_ExceptionInfo

// string Description = 1;
inline void RpcReturn_ExceptionInfo::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RpcReturn_ExceptionInfo::description() const {
  // @@protoc_insertion_point(field_get:RPC.RpcReturn.ExceptionInfo.Description)
  return description_.GetNoArena();
}
inline void RpcReturn_ExceptionInfo::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RPC.RpcReturn.ExceptionInfo.Description)
}
#if LANG_CXX11
inline void RpcReturn_ExceptionInfo::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RPC.RpcReturn.ExceptionInfo.Description)
}
#endif
inline void RpcReturn_ExceptionInfo::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RPC.RpcReturn.ExceptionInfo.Description)
}
inline void RpcReturn_ExceptionInfo::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RPC.RpcReturn.ExceptionInfo.Description)
}
inline ::std::string* RpcReturn_ExceptionInfo::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:RPC.RpcReturn.ExceptionInfo.Description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcReturn_ExceptionInfo::release_description() {
  // @@protoc_insertion_point(field_release:RPC.RpcReturn.ExceptionInfo.Description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcReturn_ExceptionInfo::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:RPC.RpcReturn.ExceptionInfo.Description)
}

// int32 scode = 2;
inline void RpcReturn_ExceptionInfo::clear_scode() {
  scode_ = 0;
}
inline ::google::protobuf::int32 RpcReturn_ExceptionInfo::scode() const {
  // @@protoc_insertion_point(field_get:RPC.RpcReturn.ExceptionInfo.scode)
  return scode_;
}
inline void RpcReturn_ExceptionInfo::set_scode(::google::protobuf::int32 value) {
  
  scode_ = value;
  // @@protoc_insertion_point(field_set:RPC.RpcReturn.ExceptionInfo.scode)
}

// int32 wCode = 3;
inline void RpcReturn_ExceptionInfo::clear_wcode() {
  wcode_ = 0;
}
inline ::google::protobuf::int32 RpcReturn_ExceptionInfo::wcode() const {
  // @@protoc_insertion_point(field_get:RPC.RpcReturn.ExceptionInfo.wCode)
  return wcode_;
}
inline void RpcReturn_ExceptionInfo::set_wcode(::google::protobuf::int32 value) {
  
  wcode_ = value;
  // @@protoc_insertion_point(field_set:RPC.RpcReturn.ExceptionInfo.wCode)
}

// -------------------------------------------------------------------

// RpcReturn

// sfixed32 CallID = 1;
inline void RpcReturn::clear_callid() {
  callid_ = 0;
}
inline ::google::protobuf::int32 RpcReturn::callid() const {
  // @@protoc_insertion_point(field_get:RPC.RpcReturn.CallID)
  return callid_;
}
inline void RpcReturn::set_callid(::google::protobuf::int32 value) {
  
  callid_ = value;
  // @@protoc_insertion_point(field_set:RPC.RpcReturn.CallID)
}

// sfixed32 HResult = 2;
inline void RpcReturn::clear_hresult() {
  hresult_ = 0;
}
inline ::google::protobuf::int32 RpcReturn::hresult() const {
  // @@protoc_insertion_point(field_get:RPC.RpcReturn.HResult)
  return hresult_;
}
inline void RpcReturn::set_hresult(::google::protobuf::int32 value) {
  
  hresult_ = value;
  // @@protoc_insertion_point(field_set:RPC.RpcReturn.HResult)
}

// .RPC.VariantParam ReturnVal = 3;
inline bool RpcReturn::has_returnval() const {
  return this != internal_default_instance() && returnval_ != NULL;
}
inline void RpcReturn::clear_returnval() {
  if (GetArenaNoVirtual() == NULL && returnval_ != NULL) {
    delete returnval_;
  }
  returnval_ = NULL;
}
inline const ::RPC::VariantParam& RpcReturn::returnval() const {
  const ::RPC::VariantParam* p = returnval_;
  // @@protoc_insertion_point(field_get:RPC.RpcReturn.ReturnVal)
  return p != NULL ? *p : *reinterpret_cast<const ::RPC::VariantParam*>(
      &::RPC::_VariantParam_default_instance_);
}
inline ::RPC::VariantParam* RpcReturn::release_returnval() {
  // @@protoc_insertion_point(field_release:RPC.RpcReturn.ReturnVal)
  
  ::RPC::VariantParam* temp = returnval_;
  returnval_ = NULL;
  return temp;
}
inline ::RPC::VariantParam* RpcReturn::mutable_returnval() {
  
  if (returnval_ == NULL) {
    returnval_ = new ::RPC::VariantParam;
  }
  // @@protoc_insertion_point(field_mutable:RPC.RpcReturn.ReturnVal)
  return returnval_;
}
inline void RpcReturn::set_allocated_returnval(::RPC::VariantParam* returnval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete returnval_;
  }
  if (returnval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      returnval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, returnval, submessage_arena);
    }
    
  } else {
    
  }
  returnval_ = returnval;
  // @@protoc_insertion_point(field_set_allocated:RPC.RpcReturn.ReturnVal)
}

// .RPC.RpcReturn.ExceptionInfo Exception = 4;
inline bool RpcReturn::has_exception() const {
  return this != internal_default_instance() && exception_ != NULL;
}
inline void RpcReturn::clear_exception() {
  if (GetArenaNoVirtual() == NULL && exception_ != NULL) {
    delete exception_;
  }
  exception_ = NULL;
}
inline const ::RPC::RpcReturn_ExceptionInfo& RpcReturn::exception() const {
  const ::RPC::RpcReturn_ExceptionInfo* p = exception_;
  // @@protoc_insertion_point(field_get:RPC.RpcReturn.Exception)
  return p != NULL ? *p : *reinterpret_cast<const ::RPC::RpcReturn_ExceptionInfo*>(
      &::RPC::_RpcReturn_ExceptionInfo_default_instance_);
}
inline ::RPC::RpcReturn_ExceptionInfo* RpcReturn::release_exception() {
  // @@protoc_insertion_point(field_release:RPC.RpcReturn.Exception)
  
  ::RPC::RpcReturn_ExceptionInfo* temp = exception_;
  exception_ = NULL;
  return temp;
}
inline ::RPC::RpcReturn_ExceptionInfo* RpcReturn::mutable_exception() {
  
  if (exception_ == NULL) {
    exception_ = new ::RPC::RpcReturn_ExceptionInfo;
  }
  // @@protoc_insertion_point(field_mutable:RPC.RpcReturn.Exception)
  return exception_;
}
inline void RpcReturn::set_allocated_exception(::RPC::RpcReturn_ExceptionInfo* exception) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete exception_;
  }
  if (exception) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      exception = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exception, submessage_arena);
    }
    
  } else {
    
  }
  exception_ = exception;
  // @@protoc_insertion_point(field_set_allocated:RPC.RpcReturn.Exception)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace RPC

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RPC_2eproto__INCLUDED
